#!/usr/bin/env python
# -*- coding: utf-8 -*-
# diamond-patterns (cc) 2019 Ian Dennis Miller

import click
import sys
sys.path.insert(0, '.')
from diamond_patterns import Pattern


@click.group()
@click.option('--pattern', help='name of pattern to apply.')
@click.pass_context
def cli(ctx, pattern):
    ctx.obj['pattern'] = pattern


@cli.command('scaffold', short_help='scaffold a folder with a pattern.')
@click.pass_context
def scaffold(ctx):
    pattern = ctx.obj['pattern']
    p = Pattern()
    p.run_scaffold(pattern)


@cli.command('noprompt', short_help='non-interactive scaffold.')
@click.pass_context
def non_interactive(ctx):
    pattern = ctx.obj['pattern']
    p = Pattern()
    p.run_scaffold(pattern, testing=True)


@cli.command('list', short_help='list available patterns.')
def list_patterns():
    p = Pattern()
    print("Available patterns:\n")
    for pattern in p.patterns:
        print("- {0}".format(pattern))
    print("")


@cli.command('version', short_help='show version')
def version():
    print()


@cli.command('update', short_help='update patterns')
def update():
    p = Pattern()
    print("Updating {}".format(p.manifest_file))
    p.download_manifest()


if __name__ == '__main__':
    from diamond_patterns.__meta__ import __version__
    print("Diamond-Patterns", __version__)
    cli(obj={})
